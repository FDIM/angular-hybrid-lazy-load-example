{"version":3,"sources":["D:/Development/angular-hybrid-lazy-load-example/src/$_lazy_route_resource lazy","D:/Development/angular-hybrid-lazy-load-example/src/app/app.module.ts","D:/Development/angular-hybrid-lazy-load-example/src/app/lazy-module-loader.service.ts","D:/Development/angular-hybrid-lazy-load-example/src/app/root/root.component.html","D:/Development/angular-hybrid-lazy-load-example/src/app/root/root.component.ts","D:/Development/angular-hybrid-lazy-load-example/src/main.ts","D:/Development/angular-hybrid-lazy-load-example/src/polyfills.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./lazy/lazy.module\": [\n\t\t\"../../../../../src/app/lazy/lazy.module.ts\",\n\t\t\"lazy.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Development/angular-hybrid-lazy-load-example/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule, NgModuleFactoryLoader, SystemJsNgModuleLoader, Injector } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { downgradeComponent } from '@angular/upgrade/static';\nimport { LazyModuleLoader } from './lazy-module-loader.service';\nimport * as angular from 'angular';\nimport { provideRoutes } from '@angular/router';\nimport { RootComponent } from './root/root.component';\n\nconst lazyModulePath = './lazy/lazy.module#LazyModule';\n\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [\n    RootComponent\n  ],\n  entryComponents: [\n    RootComponent\n  ],\n  providers: [\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    { provide: LazyModuleLoader, useFactory: (i: any) => i.get('LazyModuleLoader'), deps: ['$injector'] },\n\n    provideRoutes([{ path: 'lazy', loadChildren: lazyModulePath }])\n  ]\n})\nexport class AppModule {\n  public static ModuleName = 'app';\n  constructor(\n    injector: Injector,\n    factoryLoader: NgModuleFactoryLoader,\n    lazyLoader: LazyModuleLoader\n  ) {\n    // setup angularjs service so that it would be able to load other modules\n    lazyLoader.init(factoryLoader, injector);\n  }\n  ngDoBootstrap() {\n\n  }\n}\n\nconst app = angular.module(AppModule.ModuleName, ['ngRoute']);\napp.service('LazyModuleLoader', LazyModuleLoader);\n// make sure that angular module is bootstrapped initially\napp.directive('appRoot', downgradeComponent({ component: RootComponent }));\n\nconst injectModuleRef = (ref?) => angular.element(document.querySelector('body')).data('$$$angularInjectorController', ref);\n\napp.run(['$rootScope', 'LazyModuleLoader', ($rootScope, lazyModuleLoader) => {\n  $rootScope.$on('$routeChangeStart', (ev, next) => {\n    injectModuleRef(next.$$route && next.$$route.modulePath ? lazyModuleLoader.get(next.$$route.modulePath) : undefined);\n  });\n}]);\n\napp.config(['$routeProvider', ($routeProvider) => {\n  $routeProvider.when('/lazy', {\n    template: '<lazy>loading lazy</lazy>',\n    modulePath: lazyModulePath,\n    resolve: {\n      moduleRef: ['LazyModuleLoader', (loader: LazyModuleLoader) => {\n        return loader.load(lazyModulePath)\n          .then(injectModuleRef)\n          .catch((err) => {\n            console.error(err);\n          });\n      }]\n    }\n  });\n  $routeProvider.otherwise({\n    template: '<a href=\"#!/lazy\">go to lazy loaded module</a>'\n  });\n}]);\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/angular-hybrid-lazy-load-example/src/app/app.module.ts","import {\r\n    ViewContainerRef,\r\n    NgModuleFactoryLoader,\r\n    Injector,\r\n    NgModuleRef\r\n} from '@angular/core';\r\n\r\n// working example that was adapted\r\n// https://stackblitz.com/edit/angular-lazy-loading-without-router?file=app%2Fapp.module.ts\r\nexport class LazyModuleLoader {\r\n    private loader: NgModuleFactoryLoader;\r\n    private newInjector: Injector;\r\n    private waitingInit?: any;\r\n    private pending: { [prop: string]: Promise<NgModuleRef<any>> } = {};\r\n    private loaded: { [prop: string]: any } = {};\r\n\r\n    public static $inject = [\r\n        '$injector',\r\n        '$q'\r\n    ];\r\n    constructor(\r\n        private $injector: any,\r\n        private $q: any\r\n    ) { }\r\n\r\n    public init(loader: NgModuleFactoryLoader, injector: Injector) {\r\n        this.loader = loader;\r\n        this.newInjector = injector;\r\n        if (this.waitingInit) {\r\n            this.waitingInit.resolve();\r\n            this.waitingInit = undefined;\r\n        }\r\n    }\r\n\r\n    public get(value: string | any): boolean {\r\n        return this.loaded[this.normalize(value)];\r\n    }\r\n\r\n    public isLoaded(value: string | any): boolean {\r\n        return !!this.loaded[this.normalize(value)];\r\n    }\r\n\r\n    public load(value: string | any): Promise<NgModuleRef<any>> {\r\n        // support actual module with static fields\r\n        value = this.normalize(value);\r\n        let promise;\r\n        // is module loading?\r\n        if (this.pending[value]) {\r\n            promise = this.pending[value];\r\n        } else if (!this.loader) {\r\n            if (!this.waitingInit) {\r\n                this.waitingInit = this.$q.defer();\r\n            }\r\n            promise = this.pending[value] = this.waitingInit.promise.then(() => {\r\n                return this.loadAndInit(value);\r\n            }) as any;\r\n        } else if (!this.loaded[value]) {\r\n            // if its not loaded, start loading it and return promise\r\n            promise = this.pending[value] = this.loadAndInit(value);\r\n        } else {\r\n            promise = this.$q.resolve(this.loaded[value]) as any;\r\n        }\r\n        return promise;\r\n    }\r\n\r\n    private loadAndInit(value: string | any): Promise<NgModuleRef<any>> {\r\n        return this.loader.load(value).then(factory => {\r\n\r\n            const module = factory.create(this.newInjector);\r\n\r\n            const lazyModules: string[] = module.injector.get('LAZY_NG_MODULES');\r\n            if (lazyModules.length > 0) {\r\n                this.$injector.loadNewModules(lazyModules);\r\n            }\r\n            this.loaded[value] = module;\r\n            delete this.pending[value];\r\n            return module;\r\n        });\r\n    }\r\n\r\n    public loadAndCreateComponent(value: string | any, viewRef: ViewContainerRef, componentName: string): Promise<NgModuleRef<any>> {\r\n        return this.load(value).then((module: NgModuleRef<any>) => {\r\n            const entryComponentType = module.injector.get(componentName || 'LAZY_NG_MODULES');\r\n            if (entryComponentType) {\r\n                const componentFactory = module.componentFactoryResolver.resolveComponentFactory(entryComponentType);\r\n                viewRef.createComponent(componentFactory);\r\n            }\r\n            return module;\r\n        });\r\n    }\r\n\r\n    private normalize(value: string | any): string {\r\n        if (value && value.Path) {\r\n            value = value.Path;\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/angular-hybrid-lazy-load-example/src/app/lazy-module-loader.service.ts","module.exports = \"<p>\\r\\n    root works!\\r\\n</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Development/angular-hybrid-lazy-load-example/src/app/root/root.component.html\n// module id = ../../../../../src/app/root/root.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './root.component.html'\r\n})\r\nexport class RootComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Development/angular-hybrid-lazy-load-example/src/app/root/root.component.ts","import './polyfills';\n\nimport * as angular from 'angular';\nimport 'angular-route';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { downgradeModule } from '@angular/upgrade/static';\nimport { AppModule } from './app/app.module';\n\n// Ensure AngularJS destroys itself on hot reloads.\nconst rootElement = angular.element(document.body);\nconst oldInjector = rootElement.injector();\nif (oldInjector) {\n    oldInjector.get('$rootScope').$destroy();\n    rootElement.data('$injector', null);\n}\n\nexport const ng2BootstrapFn = (extraProviders: any[]) =>\n    platformBrowserDynamic(extraProviders).bootstrapModule(AppModule);\n\nangular.bootstrap(document.body, [\n    downgradeModule(ng2BootstrapFn),\n    AppModule.ModuleName\n]);\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/angular-hybrid-lazy-load-example/src/main.ts","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Required to support Web Animations `@angular/platform-browser/animations`.\n * Needed for: All but Chrome, Firefox and Opera. http://caniuse.com/#feat=web-animation\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/angular-hybrid-lazy-load-example/src/polyfills.ts"],"sourceRoot":"webpack:///"}